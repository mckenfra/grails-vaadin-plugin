h1. currencySelect

h2. Purpose

Adds a Currency-populated [Select|http://vaadin.com/api/com/vaadin/ui/Select.html] field to the parent container.

h2. Examples

{code:java}
// Within a form
<v:form bean="${accountInstance}">
  <v:currencySelect name="currency">Currency</v:currencySelect>
</v:form>

// Standalone
<v:currencySelect>My Currency Select</v:currencySelect>
{code}

h2. Description

The currencySelect tag is a special type of [field|Tags] tag, where the field component
is a Vaadin [Select|http://vaadin.com/api/com/vaadin/ui/Select.html].

The select is auto-populated with the list of default [Currency|http://docs.oracle.com/javase/6/docs/api/java/util/Currency.html]
instances for all available [Locale|http://docs.oracle.com/javase/6/docs/api/java/util/Locale.html]
instances.

This mimics Grails's [currencySelect|http://grails.org/doc/latest/ref/Tags/currencySelect.html] tag.

h4. Body

* Contains the caption for the field

h4. Attributes

h5. Specific

* @name@ (optional) The property name of the field

* @caption@ (optional) The caption of the field. Overrides the body content.

* @type@ (optional) The class (or its fully-qualified name) of the Vaadin Component to use for the field, or a recognised short type-name: @comboBox@, @listSelect@, @optionGroup@, @select@

* @from@ (optional) The data to use as [containerDataSource|https://vaadin.com/api/com/vaadin/ui/AbstractSelect.html#setContainerDataSource(com.vaadin.data.Container)]. Either a comma-separated String, a collection of objects or a Vaadin [Container|http://vaadin.com/api/com/vaadin/data/Container.html].

* @itemIds@ (optional) Override the default itemIds. Either a comma-separated String or a collection of objects.

* @itemId@ (optional) Override the default itemId for each item. Either a closure that takes an [Item|http://vaadin.com/api/com/vaadin/data/Item.html] parameter and returns an id, or the name of a property of the underlying bean.

* @itemCaption@ (optional) Override the default itemCaption for each item. Either a closure that takes an [Item|http://vaadin.com/api/com/vaadin/data/Item.html] parameter and returns a caption, or the name of a property of the underlying bean.

* @itemIcon@ (optional) Display an icon for each item. Either a closure that takes an [Item|http://vaadin.com/api/com/vaadin/data/Item.html] parameter and returns an icon, or the name of a property of the underlying bean.\\The resulting value should be a Vaadin [Resource|http://vaadin.com/api/com/vaadin/terminal/Resource.html], or a String path to the resource. If the path starts with @/@ or contains @://@, it is treated as a URL; otherwise, it is treated as a path relative to the directory of the Vaadin application's active theme.

* @onValueChange@ (optional) Either a [ValueChangeListener|http://vaadin.com/api/com/vaadin/data/Property.ValueChangeListener.html] or a Closure that takes a [ValueChangeEvent|http://vaadin.com/api/com/vaadin/data/Property.ValueChangeEvent.html] parameter.

{note}
Remember to set @immediate="true"@ if you want the @ValueChangeEvent@ to fire immediately when the user selects a new value.
{note}

h5. General

* @var@ (optional) Uses Grails's [set|http://grails.org/doc/latest/ref/Tags/set.html] tag to set the value of the specified variable to be this component.

* @class@ (optional) The CSS class name to add to the component using the addStyleName() method

* @sizeUndefined@ (optional) Calls setSizeUndefined() on the component. (Attribute value is ignored)

* @sizeFull@ (optional) Calls setSizeFull() on the component. (Attribute value is ignored)

{note}
See Vaadin [Select|http://vaadin.com/api/com/vaadin/ui/Select.html] API docs for full list of allowed attributes.
{note}
