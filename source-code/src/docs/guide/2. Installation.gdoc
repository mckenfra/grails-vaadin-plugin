h4. Download the Plugin

The preferred method for installing plugins is to add a plugin dependency
in @grails-app/conf/BuildConfig.groovy@, i.e.:

{code}
plugins {
    // Other plugin dependencies here
    // . . .
    // . . .

    compile ':vaadin:latest.integration'
}
{code}

This will trigger installation of the plugin when we compile or run our app. But since
we need to use scripts in the plugin beforehand, we also have to install the plugin
manually the first time. Run the following at the command line:

{code}
grails install-plugin vaadin
{code}

h4. Create the Application

After installing the plugin, you should run the following at the command line to
create your Vaadin application:

{code}
generate-vaadin-app com.somewhere.MyApp
{code}

This will:

* *Create Application Class*
** A class of type @com.vaadin.Application@ will be created with the specified name, in @grails-app/vaadin@
* *Update VaadinConfig*
** The @applicationClass@ setting in @grails-app/conf/VaadinConfig.groovy@ will be changed to the new name.
* *Install Theme*
** The grails theme for Vaadin will be installed in @web-app/VAADIN/themes/main@
* *Disable UrlMappings*
** Any entries in @grails-app/conf/UrlMappings.groovy@ will be commented out, as these are incompatible with Vaadin (currently).

h4. Run the Application

If you now execute the following at the command line, you should see the default Grails
home page - however note this is implemented in Vaadin, even though it (should) look
identical to the standard home page provided by Grails!

{code}
grails run-app
{code}
