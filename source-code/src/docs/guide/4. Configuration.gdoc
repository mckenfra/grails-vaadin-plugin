The plugin is configured using the @grails-app/conf/VaadinConfig.groovy@ configuration
file. A default configuration file is automatically created in your application when
the Vaadin plugin is first installed. The available settings are as follows:

h3. VaadinConfig

{table}
 *Parameter* | *Description*
 *applicationClass* | The name of the app's main Vaadin [Application|http://vaadin.com/api/com/vaadin/Application.html] class.
 *servletClass* | The name of the app's main Vaadin [ApplicationServlet|http://vaadin.com/api/com/vaadin/terminal/gwt/server/ApplicationServlet.html] class.
 *autowire* | Set how spring dependencies should be referenced. Either @byName@ or @byType@.
 *contextRelativePath* | The root path of the Vaadin application. Note that this is appended to the Grails applications's @grails.app.context@ path. If set as @'/'@ then Vaadin will handle all requests, bypassing Grails.
 *googleAppEngineMode* | Set to @true@ if the app is to be deployed on Google App Engine.
 *javascriptLibraries* | Specify a list of paths to Javascript files, to be included within the HTML @<head>@.
 *systemMessages* | A closure that contains settings to apply to [Application.SystemMessages|http://vaadin.com/api/com/vaadin/Application.SystemMessages.html]. For example, set the @sessionExpiredNotificationEnabled@ to @false@ to automatically start a new session if the old one has expired.
{table}

h3. Other Configuration

Note that the Vaadin plugin depends on two external Vaadin addons. Therefore the Vaadin addons
Maven repository needs to be included in the @repositories@ closure in your app's
@grails-app/conf/BuildConfig.groovy@. This is automatically added by command  
[generate-vaadin-app|Command Line].

The Vaadin addons Maven repository is @http://maven.vaadin.com/vaadin-addons@
